Hướng dẫn tạo và cập nhật JWT Secret:

1.  **Tại sao cần JWT Secret?**
    *   Ứng dụng sử dụng JWT (JSON Web Token) để xác thực người dùng sau khi đăng nhập.
    *   `JWT_SECRET` là một chuỗi bí mật mạnh, dùng để ký (tạo) và xác minh các token này.
    *   Nếu giá trị này bị trống hoặc yếu, hệ thống xác thực sẽ không hoạt động và ứng dụng có thể gặp lỗi nghiêm trọng khi khởi động hoặc trong quá trình hoạt động.

2.  **Tạo Secret Ngẫu Nhiên (Ưu tiên dùng PowerShell trên Windows):**
    *   **Cách 1: Dùng PowerShell (Khuyến nghị cho Windows)**
        *   Mở **PowerShell** trên máy của bạn.
        *   Chạy lệnh sau:
            ```powershell
            $bytes = New-Object Byte[] 64; [System.Security.Cryptography.RandomNumberGenerator]::Create().GetBytes($bytes); $hex = [System.BitConverter]::ToString($bytes) -replace '-'; $hex.ToLower()
            ```
        *   Lệnh này sẽ in ra một chuỗi hex ngẫu nhiên dài. Hãy **sao chép (copy)** toàn bộ chuỗi này.
    *   **Cách 2: Dùng Node.js (Có thể gặp lỗi dấu ngoặc kép)**
        *   Nếu bạn muốn thử lại với Node.js hoặc dùng terminal khác như Git Bash, chạy lệnh:
            ```powershell
            node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
            ```
        *   Nếu gặp lỗi `SyntaxError`, hãy sử dụng cách PowerShell ở trên.

3.  **Cập nhật tệp `.env`:**
    *   Mở tệp `.env` trong thư mục gốc của dự án (`E:\Github Repos\Tarot-Website-Backend\.env`).
    *   Tìm dòng `JWT_SECRET=`.
    *   **Dán (paste)** chuỗi bí mật bạn vừa sao chép vào ngay sau dấu `=`. Dòng đó sẽ trông giống như sau (với chuỗi bí mật của bạn):
        ```
        JWT_SECRET=chuoi_bi_mat_rat_dai_cua_ban_o_day
        ```
    *   **Lưu** tệp `.env` lại.

4.  **Khởi động lại Docker:**
    *   Mở lại terminal trong thư mục dự án.
    *   Chạy lệnh sau để dừng và khởi động lại các container Docker, áp dụng thay đổi từ tệp `.env`:
        ```powershell
        docker-compose down && docker-compose up -d --force-recreate
        ```
    *   Chờ cho các container khởi động lại hoàn toàn.

5.  **Kiểm tra lại Swagger UI:**
    *   Sau khi Docker khởi động xong, hãy thử truy cập lại `http://localhost:5005/api-docs/` trong trình duyệt của bạn. Lần này nó sẽ hoạt động nếu vấn đề là do thiếu JWT Secret.

Hãy thực hiện các bước trên. Việc đặt JWT Secret là rất quan trọng.
